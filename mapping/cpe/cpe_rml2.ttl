@prefix rml: <http://semweb.mmlab.be/ns/rml#> .
@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix ql: <http://semweb.mmlab.be/ns/ql#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix : <http://example.org/rules/> .
@prefix schema: <http://schema.org/> .
@prefix dbo: <http://dbpedia.org/ontology/> .
@prefix cve: <http://purl.org/cyber/cve#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix stx: <http://purl.org/cyber/stx#> .
@prefix uco: <http://purl.org/cyber/uco#> .
@prefix xml: <http://www.w3.org/XML/1998/namespace> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix capec: <http://purl.org/cyber/capec#> .
@base <http://purl.org/cyber/uco#> .


# Platform Class mapping
uco:CPEMap a rr:TriplesMap;
  rml:logicalSource [
    rml:source "./mapping/cve/cves.json";
    rml:referenceFormulation ql:JSONPath;
    rml:iterator "$.cves[*].cve.configurations[*].nodes[*].cpeMatch[*]"
];

rr:subjectMap [
  rr:template "http://purl.org/cyber/uco#{criteria}";
  rr:class uco:ucoCPE
].

# CPE Class mapping
uco:PlatformMap a rr:TriplesMap;
  rml:logicalSource [
    rml:source "./mapping/cve/cves.json";
    rml:referenceFormulation ql:JSONPath;
    rml:iterator "cves[*]"
];
rr:subjectMap [
  rr:template "http://purl.org/cyber/uco#{cve.id}";
  rr:class uco:ucoCVE
].

# Platform has CVE_ID predicate
# This is also how you join two classes
uco:CPEMap rr:predicateObjectMap [
    rr:predicate uco:ucohasPlatform;  # The predicate linking CPEMap to PlatformMap
    rr:objectMap [
        rr:parentTriplesMap uco:PlatformMap;  # Referencing the PlatformMap
        rr:joinCondition [
          rr:child "cve.id";
          rr:parent "cve.id"
        ]
    ]
].